/** Declaration file generated by dts-gen */

export const CONS: number;

export const DOUBLE: number;

export const NUM: number;

export const STR: number;

export const SYM: number;

export const TENSOR: number;

export const version: string;

export function Find(p: any, q: any): any;

export function Gamma(): any;

export function abs(): any;

export function add(): any;

export function adj(): any;

export function and(): any;

export function approxAll(theFloat: any): any;

export function approxRadicals(theFloat: any): any;

export function approxRationalsOfLogs(theFloat: any): any;

export function approxratio(): any;

export function arccos(): any;

export function arccosh(): any;

export function arcsin(): any;

export function arcsinh(): any;

export function arctan(): any;

export function arctanh(): any;

export function arg(): any;

export function atomize(): any;

export function besselj(): any;

export function bessely(): any;

export function binding(): any;

export function binomial(): any;

export function caaddr(p: any): any;

export function caadr(p: any): any;

export function caar(p: any): any;

export function cadaddr(p: any): any;

export function cadadr(p: any): any;

export function cadar(p: any): any;

export function caddaddr(p: any): any;

export function caddadr(p: any): any;

export function caddar(p: any): any;

export function caddddr(p: any): any;

export function cadddr(p: any): any;

export function caddr(p: any): any;

export function cadr(p: any): any;

export function car(p: any): any;

export function cdaddr(p: any): any;

export function cdadr(p: any): any;

export function cdar(p: any): any;

export function cddaddr(p: any): any;

export function cddar(p: any): any;

export function cdddaddr(p: any): any;

export function cddddr(p: any): any;

export function cdddr(p: any): any;

export function cddr(p: any): any;

export function cdr(p: any): any;

export function ceiling(): any;

export function check(): any;

export function choose(): any;

export function circexp(): any;

export function clear(): any;

export function clearAlgebraEnvironment(): any;

export function clearall(): any;

export function clearpatterns(): any;

export function clock(): any;

export function coeff(): any;

export function cofactor(): any;

export function collectUserSymbols(p: any, accumulator: any): void;

export function component(): any;

export function computeDependenciesFromAlgebra(codeFromAlgebraBlock: any): any;

export function computeResultsAndJavaScriptFromAlgebra(codeFromAlgebraBlock: any): any;

export function condense(): any;

export function conj(): any;

export function contract(): any;

export function cos(): any;

export function cosh(): any;

export function decomp(): any;

export function defint(): any;

export function deg(): any;

export function denominator(): any;

export function derivative(): any;

export function det(): any;

export function dim(): any;

export function dirac(): any;

export function divisors(): any;

export function dot(): any;

export function draw(): any;

export function dsolve(): any;

export function dupl(): any;

export function eigen(): any;

export function eigenval(): any;

export function eigenvec(): any;

export function equal(p1: any, p2: any): any;

export function equals(): any;

export function erf(): any;

export function erfc(): any;

export function eval(): any;

export function exec(...args: any[]): any;

export function exp(): any;

export function expand(): any;

export function expcos(): any;

export function expsin(): any;

export function factor(): any;

export function factorial(): any;

export function factorpoly(): any;

export function filter(): any;

export function findDependenciesInScript(stringToBeParsed: any, dontGenerateCode: any): any;

export function floor(): any;

export function gcd(): any;

export function get_binding(p: any): any;

export function hermite(): any;

export function hilbert(): any;

export function imag(): any;

export function init(): any;

export function inner(): any;

export function integral(): any;

export function inv(): any;

export function invg(): any;

export function isNumericAtom(p: any): any;

export function isZeroAtomOrTensor(p: any): any;

export function isadd(p: any): any;

export function iscomplexnumber(p: any): any;

export function iscons(p: any): any;

export function isdouble(p: any): any;

export function iseveninteger(p: any): any;

export function isfactorial(p: any): any;

export function isfloating(p: any): any;

export function isfraction(p: any): any;

export function isimaginarynumber(p: any): any;

export function isimaginaryunit(p: any): any;

export function isinteger(): any;

export function isintegerfactor(p: any): any;

export function iskeyword(p: any): any;

export function isminusone(p: any): any;

export function isminusoneoversqrttwo(p: any): any;

export function ismultiply(p: any): any;

export function isnegative(p: any): any;

export function isnegativenumber(p: any): any;

export function isnegativeterm(p: any): any;

export function isnonnegativeinteger(p: any): any;

export function isnpi(p: any): any;

export function isoneover(p: any): any;

export function isoneoversqrttwo(p: any): any;

export function isplusone(p: any): any;

export function isposint(p: any): any;

export function ispower(p: any): any;

export function isprime(): any;

export function isquarterturn(p: any): any;

export function isrational(p: any): any;

export function isstr(p: any): any;

export function issymbol(p: any): any;

export function issymbolic(p: any): any;

export function istensor(p: any): any;

export function laguerre(): any;

export function lcm(): any;

export function leading(): any;

export function legendre(): any;

export function length(p: any): any;

export function log(): any;

export function make_hashed_itab(): any;

export function mod(): any;

export function multiply(): any;

export function not(): any;

export function nroots(): any;

export function number(): any;

export function numerator(): any;

export function operator(): any;

export function or(): any;

export function outer(): any;

export function parse(argu: any): any;

export function pattern(): any;

export function patternsinfo(): any;

export function polar(): any;

export function pop(): any;

export function power(): any;

export function prime(): any;

export function print(): any;

export function print2dascii(): any;

export function printcomputer(): any;

export function printhuman(): any;

export function printlatex(): any;

export function printlist(): any;

export function product(): any;

export function push(p: any): any;

export function quote(): any;

export function quotient(): any;

export function rank(): any;

export function rationalize(): any;

export function real(): any;

export function rect(): any;

export function restore(): any;

export function roots(): any;

export function round(): any;

export function run(stringToBeRun: any, generateLatex: any): any;

export function save(): any;

export function scan(s: any): any;

export function set_binding(p: any, q: any): any;

export function sgn(): any;

export function shape(): any;

export function silentpattern(): any;

export function simplify(): any;

export function sin(): any;

export function sinh(): any;

export function sqrt(): any;

export function stop(): any;

export function subst(): any;

export function sum(): any;

export function swap(): any;

export function symbol(x: any): any;

export function symbolsinfo(): any;

export function tan(): any;

export function tanh(): any;

export function taylor(): any;

export function test(): any;

export function testApprox(): any;

export function testeq(): any;

export function testge(): any;

export function testgt(): any;

export function testle(): any;

export function testlt(): any;

export function transpose(): any;

export function unit(): any;

export function usr_symbol(s: any): any;

export function zero(): any;

